@model PagedList.IPagedList<Inventory.Models.Bowl>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm())
{
    <table class="table-condensed">
        <tr>
            <td>
                Bowl Size:
            </td>
            <td>
                @Html.DropDownList("search", (SelectList)ViewBag.BowlSizeId, "")
            </td>
        </tr>

        <tr>
            <td colspan="2" style="text-align: center;">
                <input type="submit" value="Search" />
            </td>
        </tr>
    </table>
}
<br/>
<table class="table">
    <tr>
        <th>
            Picture
        </th>
        <th>
            File Name
        </th>

        <th>
            @Html.ActionLink("Size", "Index", new { sortOrder = ViewBag.SizeSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Bias", "Index", new { sortOrder = ViewBag.BiasSortParm, currentFilter = ViewBag.CurrentFilter })

        </th>
        <th>
            @Html.ActionLink("Weight", "Index", new { sortOrder = ViewBag.WeightSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>

        <th>
            In a Locker
        </th>
        <th>
            Locker Owner
        </th>
        <th>
            Comment
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @{
                    String img64Url = "";
                    if (item.Picture != null)
                    {
                        string img64 = Convert.ToBase64String(item.Picture);
                        img64Url = $"data:image/jpeg;base64,{img64}"; //imagetype can be e.g. gif, jpeg, png etc.
                    }
                }
                <img src="@img64Url" width="50" />

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FileName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BowlSize.Size)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Bias.BiasSize)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Weight.BowlWeight)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.InLocker)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OwnerName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comment)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
